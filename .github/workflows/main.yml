name: LoQi Portfolio CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash
        if: matrix.os == 'macos-latest'

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if exist requirements.txt pip install -r requirements.txt
        shell: cmd

      - name: Copy Icon from ASSETS Folder (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if exist "${GITHUB_WORKSPACE}\ASSETS\PortF.ico" copy "${GITHUB_WORKSPACE}\ASSETS\PortF.ico" .
        shell: cmd

      - name: Build Application
        run: |
          pyinstaller --onefile --icon=PortF.ico GHP.py
          mv dist/application GHP
        continue-on-error: false

      - name: Organize Artifacts
        run: |
          $destDir = "${GITHUB_WORKSPACE}/dist/${{ matrix.os }}/application"
          mkdir -p $destDir
          mv GHP $destDir
        shell: bash

      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: application-${{ matrix.os }}-python-3.10
          path: dist/${{ matrix.os }}

      - name: Notify Build Completion
        if: always()
        uses: actions/github-script@v5
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Build completed: ${{ job.status }}'
            })
